apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    chart: "{{ .Chart.Name | trunc 63 }}"
    chartVersion: "{{ .Chart.Version | trunc 63 }}"
    visualize: "true"
    app: {{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.service.name }}
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: FALCON_SUGGESTION_API_BASE_URL
          value: "{{ .Values.env.FALCON_SUGGESTION_API_BASE_URL }}"
        - name: FALCON_SUGGESTION_ENDPOINT
          value: "{{ .Values.env.FALCON_SUGGESTION_ENDPOINT }}"
        - name: AUTHORS_SUGGESTION_API_BASE_URL
          value: "{{ .Values.env.AUTHORS_SUGGESTION_API_BASE_URL }}"
        - name: AUTHORS_SUGGESTION_ENDPOINT
          value: "{{ .Values.env.AUTHORS_SUGGESTION_ENDPOINT }}"
        - name: ONTOTEXT_SUGGESTION_API_BASE_URL
          value: "{{ .Values.env.ONTOTEXT_SUGGESTION_API_BASE_URL }}"
        - name: ONTOTEXT_SUGGESTION_ENDPOINT
          value: "{{ .Values.env.ONTOTEXT_SUGGESTION_ENDPOINT }}"
        - name: PUBLIC_THINGS_API_BASE_URL
          value: "{{ .Values.env.PUBLIC_THINGS_API_BASE_URL }}"
        - name: PUBLIC_THINGS_ENDPOINT
          value: "{{ .Values.env.PUBLIC_THINGS_ENDPOINT }}"
        - name: DEFAULT_SOURCE_PERSON
          value: "{{ .Values.env.DEFAULT_SOURCE_PERSON }}"
        - name: DEFAULT_SOURCE_ORGANISATIONS
          value: "{{ .Values.env.DEFAULT_SOURCE_ORGANISATIONS }}"
        - name: DEFAULT_SOURCE_LOCATIONS
          value: "{{ .Values.env.DEFAULT_SOURCE_LOCATIONS }}"
        - name: CONCEPT_CONCORDANCES_API_BASE_URL
          value: "{{ .Values.env.CONCEPT_CONCORDANCES_API_BASE_URL }}"
        - name: CONCEPT_CONCORDANCES_ENDPOINT
          value: "{{ .Values.env.CONCEPT_CONCORDANCES_ENDPOINT }}"  
        ports:
        - containerPort: 8080
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: "/__gtg"
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 3
        resources:
{{ toYaml .Values.resources | indent 12 }}

